openapi: 3.0.0
info:
  title: fault information API
  version: 1.0.0
paths:
  /info:
    get:
      responses:
        '200':
          description: information list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Information'
    post:
      requestBody:
        $ref: '#/components/requestBodies/CreateInformation'
      responses:
        '201':
          description: new information created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InformationCreated'
  /info/{id}:
    get:
      responses:
        '200':
          description: information detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InformationDetail'
        '404':
          description: information not found
    put:
      requestBody:
        $ref: '#/components/requestBodies/CreateInformation'
      responses:
        '200':
          description: information updated
        '404':
          description: information not found
    delete:
      responses:
        '200':
          description: information deleted
        '404':
          description: information not found
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /info/{id}/comments:
    get:
      responses:
        '200':
          description: comment list for information {id}
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
    post:
      requestBody:
        $ref: '#/components/requestBodies/CreateComment'
      responses:
        '201':
          description: new comment created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/CommentCreated'
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /info/{info_id}/comments/{comment_id}:
    get:

      responses:
        '200':
          description: comment detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentDetail'
        '404':
          description: comment not found
    put:
      requestBody:
        $ref: '#/components/requestBodies/CreateComment'
      responses:
        '200':
          description: comment updated
        '404':
          description: comment not found
    delete:
      responses:
        '200':
          description: comment deleted
        '404':
          description: comment not found
    parameters:
      - name: info_id
        in: path
        required: true
        schema:
          type: string
      - name: comment_id
        in: path
        required: true
        schema:
          type: string
  /type:
    get:
      responses:
        '200':
          description: defined information type list
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
    post:
      requestBody:
        $ref: '#/components/requestBodies/CreateInfoType'
      responses:
        '201':
          description: new information type created
        '409':
          description: type conflict
    delete:
      requestBody:
        $ref: '#/components/requestBodies/DeleteInfoType'
      responses:
        '200':
          description: type deleted
        '404':
          description: type not found
  /template:
    get:
      responses:
        '200':
          description: information template ID list
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
    post:
      requestBody:
        $ref: '#/components/requestBodies/CreateTemplate'
      responses:
        '201':
          description: new template created
        '409':
          description: template id conflict
  /template/{id}:
    get:
      responses:
        '200':
          description: template detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
        '404':
          description: template not found
    put:
      requestBody:
        $ref: '#/components/requestBodies/UpdateTemplate'
      responses:
        '200':
          description: template updated
        '404':
          description: template not found
    delete:
      responses:
        '200':
          description: template deleted
        '404':
          description: template not found
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
components:
  schemas:
    Information:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        begin:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        detail:
          type: string
    InformationDetail:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        begin:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        detail:
          type: string
        template_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        creator:
          type: string
        updater:
          type: string
        comments:
          type: array
          items:
            type: string
    CommentDetail:
      type: object
      properties:
        id:
          type: string
        comment:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        creator:
          type: string
        updater:
          type: string
        public:
          type: boolean
    Template:
      type: object
      properties:
        id:
          type: string
        body:
          type: string
        vars:
          type: array
          items:
            type: string
  responses:
    InformationCreated:
      description: response shows new information is successfully created
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
    CommentCreated:
      description: response shows new comment is successfully created
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
  requestBodies:
    CreateInformation:
      content:
        application/json:
          schema:
            type: object
            properties:
              type:
                type: string
              template_id:
                type: string
              vars:
                type: object
                additionalProperties: true
    CreateInfoType:
      content:
        application/json:
          schema:
            type: string
    DeleteInfoType:
      content:
        application/json:
          schema:
            type: string
    CreateComment:
      content:
        application/json:
          schema:
            type: object
            properties:
              comment:
                type: string
    CreateTemplate:
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
              template:
                type: string
    UpdateTemplate:
      content:
        application/json:
          schema:
            type: object
            properties:
              template:
                type: string
